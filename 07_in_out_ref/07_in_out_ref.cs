//                 
//                 1 Ссылочные и значимые типы данных
//                 2 Ключевое слово ref
//                 3 Ключевое слово out
//                 4 Ключевое слово in            
//                              
//                              
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _07_in_out_ref
{
    class Program
    {
        static void Main(string[] args)
        {
            //
            //                 1 Ссылочные и значимые типы данных
            //
            // Простые типы данных и структуры являются значимыми типами данных.
            // Значимые типы данных размещаются в стэке. 
            // При их перачи в функцию в качестве параметра они передаются по значению.
            // То есть значения данных копируются из переменной или структуры в
            // переменную аргумент функции. Таким образом если функция изменит значение
            // входной переменной, то это никак не отразится на значении исходной
            // переменной или структуры.
            //
            // Ссылочным типом являются классы. Они размещаются в куче (динамической
            // памяти). При передаче объекта класса в функцию передается ссылка на 
            // объект. Т.о. при изменении объекта класса внутри ф-ции, изменится сам
            // исходный оъект.
            //

            // Передача по значению - исходная переменная не меняется
            int a = 0;
            Func(a);
            Console.WriteLine("Передача по значению а = "+a);

            // Передача по ссылке - исходный массив изменияется

            int[] arr = { 0, 0 };
            FuncArr(arr);
            Console.WriteLine("Передача по ссылке аrr[0] = "+arr[0]+", аrr[1] = "+arr[1]);

            //                 2 Ключевое слово ref
            // Используется для передачи значимых типов данных в ф-цию по ссылке
            // При этом исходную переменную можно и не изменять внутри ф-ции

            int b = 0;
            FuncRef(ref b);
            Console.WriteLine("Передача по значимого типа по ссылке(с ключ словом ref) b = " + b);


            //                 3 Ключевое слово out
            //  Используется для передачи значимых типов данных в ф-цию по ссылке
            // При этом исходную переменную нужно обязательно изменять внутри ф-ции
            // 
            int c = 0;
            FunсOut(out c);
            Console.WriteLine("Передача по значимого типа по ссылке (с ключ словом out) c = " + c);

            //                 4 Ключевое слово in     
            //  Используется для передачи значимых типов данных в ф-цию по ссылке
            //  При этом исходную переменную нельзя изменять внутри ф-ции. 
            //  Смысл использования заключается в экономии ресурсов при передаче
            //  объектов больших структур в ф-цию.
            // 
            int d = 0;
            FunсIn(in d);
            Console.WriteLine("Передача по значимого типа по ссылке (с ключ словом in) d = " + d);

            void Func(int value)
            {
                value = 1;
            }

            void FuncArr(int [] value)
            {
                value[0] = 1;
                value[1] = 1;
            }

            void FuncRef(ref int value)
            {
                value = 1;
            }

            void FunсOut(out int value)
            {
                value = 1;
            }

            void FunсIn(in int value)
            {
               
            }
        }
    }
}
//Передача по значению а = 0
//Передача по ссылке аrr[0] = 1, аrr[1] = 1
//Передача по значимого типа по ссылке(с ключ словом ref) b = 1
//Передача по значимого типа по ссылке (с ключ словом out) c = 1
//Передача по значимого типа по ссылке (с ключ словом in) d = 0